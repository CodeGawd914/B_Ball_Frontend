{"ast":null,"code":"import _toConsumableArray from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/src/Containers/Locations.jsx\";\nimport React, { Component } from 'react';\nimport Places from '../Components/Places';\nimport CurrentLocation from '../Components/CurrentLocation';\nimport superagent from 'superagent';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Grid } from 'semantic-ui-react';\nexport var Location =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Location, _Component);\n\n  function Location() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Location)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      venues: [],\n      markerObjects: []\n    };\n\n    _this.onMarkerMounted = function (element) {\n      _this.setState(function (prevState) {\n        return {\n          markerObjects: [].concat(_toConsumableArray(prevState.markerObjects), [element.marker])\n        };\n      });\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.markers = function () {\n      console.log(\"STATE\", _this.state.venues[0]); // return <Marker\n      //   key={this.state.venues[0].id}\n      //   onClick={this.onMarkerClick}\n      //   title={this.state.venues[0].name}\n      //   name={this.state.venues[0].name}\n      //   position={{lat: 40.75768883549578, lng: -73.98883631344103}}\n      //   />\n      // return this.state.venues.map(venue => <Marker\n      //   key={venue.id}\n      //   onClick={this.onMarkerClick}\n      //   title={venue.name}\n      //   name={venue.name}\n      //   position={{lat: venue.location.lat, lng: venue.location.lng}}\n      //   />)\n    };\n\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212';\n      superagent.get(url).query(null).set('Accept', 'text/json').end(function (error, response) {\n        var venues = response.body.response.venues;\n\n        _this2.setState({\n          venues: venues\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props); // const style ={\n      //   width: '60%',\n      //   height: '60%'\n      // }\n      // let venueMarkers = this.state.venues.map(venue => <Marker\n      // key={venue.id}\n      // onClick={this.onMarkerClick}\n      // title={venue.name}\n      // name={venue.name}\n      // position={{lat: venue.lat, lng: venue.lng}} />)\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        padded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"places\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Places, {\n        venues: this.state.venues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"maps map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(CurrentLocation, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.venues && this.state.venues.length > 0 ? \"\" // <>{markers(this.props.google)}</>\n      : \"\", React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'chicken' // position={{lat: 40.75768883549578, lng: -73.98883631344103}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), this.markers(), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.selectedPlace.name))))))));\n    }\n  }]);\n\n  return Location;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDlbBSYoX6bM9k_ZmDCMopQhHPiPI5wjR8\"\n})(Location); // <GoogleMapLoader\n//   containerElement = {mapContainer}\n//   googleMapElement = {\n//     <GoogleMap\n//         defaultZoom={15}\n//         defaultCenter={this.props.location}\n//         options={{streetViewControl:true, mapTypeControl:false}}>\n//         </GoogleMap>\n//       }/>","map":{"version":3,"sources":["/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/src/Containers/Locations.jsx"],"names":["React","Component","Places","CurrentLocation","superagent","Map","InfoWindow","Marker","GoogleApiWrapper","Grid","Location","state","showingInfoWindow","activeMarker","selectedPlace","venues","markerObjects","onMarkerMounted","element","setState","prevState","marker","onMarkerClick","props","e","onClose","markers","console","log","url","get","query","set","end","error","response","body","google","length","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Places from '../Components/Places'\nimport CurrentLocation from '../Components/CurrentLocation'\nimport superagent from 'superagent'\nimport {Map,InfoWindow,Marker,GoogleApiWrapper} from 'google-maps-react'\nimport { Grid } from 'semantic-ui-react'\n\n\n\n  export class Location extends Component {\n\n    state = {\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},         //Shows the infoWindow to the selected place upon a marker\n      venues: [],\n      markerObjects: []\n\n    };\n\n    componentDidMount(){\n\n      const url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212'\n\n      superagent\n      .get(url)\n      .query(null)\n      .set('Accept','text/json')\n      .end((error, response) => {\n\n        const venues = response.body.response.venues\n        this.setState({venues})\n      })\n    }\n\n    onMarkerMounted = element => {\n      this.setState(prevState => ({\n        markerObjects: [...prevState.markerObjects, element.marker]\n      }))\n    };\n\n\n    onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      })\n    }\n\n    onClose = props => {\n      if(this.state.showingInfoWindow) {\n        this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n\n    }\n\n    // getVenues=()=>{\n    //   // let venueMarkers = this.state.venues.map(venue => <Marker\n    //   // key={venue.id}\n    //   // onClick={this.onMarkerClick}\n    //   // title={venue.name}\n    //   // name={venue.name}\n    //   // position={{lat: venue.lat, lng: venue.lng}} />)\n    //\n    //    let venueMarkers = this.state.venues.map(eachVenue =>{\n    //     return <Marker\n    //     key={eachVenue.id}\n    //      onClick={this.onMarkerClick}\n    //     title={eachVenue.name}\n    //     name={eachVenue.name}\n    //     position={{lat: eachVenue.location.lat, lng: eachVenue.location.lng}} />\n    //   })\n    //   console.log(venueMarkers[0]);\n    //   return venueMarkers\n    // }\n    markers = () => {\n      console.log(\"STATE\", this.state.venues[0])\n      // return <Marker\n      //   key={this.state.venues[0].id}\n      //   onClick={this.onMarkerClick}\n      //   title={this.state.venues[0].name}\n      //   name={this.state.venues[0].name}\n      //   position={{lat: 40.75768883549578, lng: -73.98883631344103}}\n      //   />\n\n      // return this.state.venues.map(venue => <Marker\n      //   key={venue.id}\n      //   onClick={this.onMarkerClick}\n      //   title={venue.name}\n      //   name={venue.name}\n      //   position={{lat: venue.location.lat, lng: venue.location.lng}}\n      //   />)\n\n\n    }\n\n  render() {\n    console.log(this.props)\n    // const style ={\n    //   width: '60%',\n    //   height: '60%'\n    // }\n\n\n\n\n    // let venueMarkers = this.state.venues.map(venue => <Marker\n    // key={venue.id}\n    // onClick={this.onMarkerClick}\n    // title={venue.name}\n    // name={venue.name}\n    // position={{lat: venue.lat, lng: venue.lng}} />)\n\n    return (\n\n      <React.Fragment>\n        <Grid columns={2} padded>\n          <Grid.Column>\n            <div className=\"places\">\n              <Places venues={this.state.venues}/>\n            </div>\n          </Grid.Column>\n          <Grid.Column>\n            <div className=\"maps map\">\n              <CurrentLocation\n                  centerAroundCurrentLocation\n                  google={this.props.google}>\n                    {this.state.venues && this.state.venues.length > 0 ?\n                      \"\" // <>{markers(this.props.google)}</>\n                      : \"\"}\n          <Marker\n\n          onClick={this.onMarkerClick}\n          name={'current location'} />\n\n          <Marker\n\n          onClick={this.onMarkerClick}\n          name={'chicken'}\n          // position={{lat: 40.75768883549578, lng: -73.98883631344103}}\n          />\n          {this.markers()}\n\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n        </div>\n\n      </Grid.Column>\n    </Grid>\n        </React.Fragment>\n\n\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: (\"AIzaSyDlbBSYoX6bM9k_ZmDCMopQhHPiPI5wjR8\")\n})(Location)\n\n\n\n\n\n\n// <GoogleMapLoader\n//   containerElement = {mapContainer}\n//   googleMapElement = {\n//     <GoogleMap\n//         defaultZoom={15}\n//         defaultCenter={this.props.location}\n//         options={{streetViewControl:true, mapTypeControl:false}}>\n//         </GoogleMap>\n//       }/>\n"]},"metadata":{},"sourceType":"module"}