{"ast":null,"code":"import _toConsumableArray from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/src/Containers/Locations.jsx\";\nimport React, { Component } from 'react';\nimport Places from '../Components/Places';\nimport CurrentLocation from '../Components/CurrentLocation';\nimport superagent from 'superagent';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport var Location =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Location, _Component);\n\n  function Location() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Location)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      venues: [],\n      markerObjects: []\n    };\n\n    _this.onMarkerMounted = function (element) {\n      _this.setState(function (prevState) {\n        return {\n          markerObjects: [].concat(_toConsumableArray(prevState.markerObjects), [element.marker])\n        };\n      });\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.getVenues = function () {\n      // let venueMarkers = this.state.venues.map(venue => <Marker\n      // key={venue.id}\n      // onClick={this.onMarkerClick}\n      // title={venue.name}\n      // name={venue.name}\n      // position={{lat: venue.lat, lng: venue.lng}} />)\n      var venueMarkers = _this.state.venues.map(function (eachVenue) {\n        console.log(eachVenue);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212';\n      superagent.get(url).query(null).set('Accept', 'text/json').end(function (error, response) {\n        var venues = response.body.response.venues;\n        console.log(JSON.stringify(venues));\n\n        _this2.setState({\n          venues: venues\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = {\n        width: '60%',\n        height: '60%' // let venueMarkers = this.state.venues.map(venue => <Marker\n        // key={venue.id}\n        // onClick={this.onMarkerClick}\n        // title={venue.name}\n        // name={venue.name}\n        // position={{lat: venue.lat, lng: venue.lng}} />)\n\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Places, {\n        venues: this.state.venues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(CurrentLocation, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"// \", venueMarkers, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.selectedPlace.name))))));\n    }\n  }]);\n\n  return Location;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDlbBSYoX6bM9k_ZmDCMopQhHPiPI5wjR8\"\n})(Location); // <GoogleMapLoader\n//   containerElement = {mapContainer}\n//   googleMapElement = {\n//     <GoogleMap\n//         defaultZoom={15}\n//         defaultCenter={this.props.location}\n//         options={{streetViewControl:true, mapTypeControl:false}}>\n//         </GoogleMap>\n//       }/>","map":{"version":3,"sources":["/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/src/Containers/Locations.jsx"],"names":["React","Component","Places","CurrentLocation","superagent","Map","InfoWindow","Marker","GoogleApiWrapper","Location","state","showingInfoWindow","activeMarker","selectedPlace","venues","markerObjects","onMarkerMounted","element","setState","prevState","marker","onMarkerClick","props","e","onClose","getVenues","venueMarkers","map","eachVenue","console","log","url","get","query","set","end","error","response","body","JSON","stringify","style","width","height","google","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Places from '../Components/Places'\nimport CurrentLocation from '../Components/CurrentLocation'\nimport superagent from 'superagent'\nimport {Map,InfoWindow,Marker,GoogleApiWrapper} from 'google-maps-react'\n\n\n\n  export class Location extends Component {\n\n    state = {\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},         //Shows the infoWindow to the selected place upon a marker\n      venues: [],\n      markerObjects: []\n\n    };\n\n    componentDidMount(){\n\n      const url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212'\n\n      superagent\n      .get(url)\n      .query(null)\n      .set('Accept','text/json')\n      .end((error, response) => {\n\n        const venues = response.body.response.venues\n\n        console.log(JSON.stringify(venues))\n        this.setState({venues})\n      })\n    }\n\n    onMarkerMounted = element => {\n      this.setState(prevState => ({\n        markerObjects: [...prevState.markerObjects, element.marker]\n      }))\n    };\n\n\n    onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      })\n    }\n\n    onClose = props => {\n      if(this.state.showingInfoWindow) {\n        this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n\n    }\n\n    getVenues=()=>{\n      // let venueMarkers = this.state.venues.map(venue => <Marker\n      // key={venue.id}\n      // onClick={this.onMarkerClick}\n      // title={venue.name}\n      // name={venue.name}\n      // position={{lat: venue.lat, lng: venue.lng}} />)\n      let venueMarkers = this.state.venues.map(eachVenue =>{\n        console.log(eachVenue);\n      })\n    }\n\n\n  render() {\n    const style ={\n      width: '60%',\n      height: '60%'\n    }\n\n    // let venueMarkers = this.state.venues.map(venue => <Marker\n    // key={venue.id}\n    // onClick={this.onMarkerClick}\n    // title={venue.name}\n    // name={venue.name}\n    // position={{lat: venue.lat, lng: venue.lng}} />)\n\n    return (\n      <React.Fragment>\n      < div>\n      <Places venues={this.state.venues}/>\n      </div>\n\n      <div style={style}>\n      <CurrentLocation\n          centerAroundCurrentLocation\n          google={this.props.google}\n        >\n        // {venueMarkers}\n          <Marker\n\n          onClick={this.onMarkerClick}\n          name={'current location'} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n        </div>\n\n        </React.Fragment>\n\n\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: (\"AIzaSyDlbBSYoX6bM9k_ZmDCMopQhHPiPI5wjR8\")\n})(Location)\n\n\n\n\n\n\n// <GoogleMapLoader\n//   containerElement = {mapContainer}\n//   googleMapElement = {\n//     <GoogleMap\n//         defaultZoom={15}\n//         defaultCenter={this.props.location}\n//         options={{streetViewControl:true, mapTypeControl:false}}>\n//         </GoogleMap>\n//       }/>\n"]},"metadata":{},"sourceType":"module"}