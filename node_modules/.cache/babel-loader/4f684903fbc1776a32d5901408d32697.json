{"ast":null,"code":"import _classCallCheck from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/src/Containers/Locations.jsx\";\nimport React, { Component } from 'react';\nimport Places from '../Components/Places';\nimport CurrentLocation from '../Components/CurrentLocation';\nimport superagent from 'superagent';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Grid } from 'semantic-ui-react';\nimport { peanuts } from \"../config.js\";\nexport var Location =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Location, _Component);\n\n  function Location() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Location)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      venues: [],\n      markerObjects: [],\n      centerLat: _this.props.center.lat,\n      centerLng: _this.props.center.lng\n    };\n\n    _this.getSomeLocation = function () {\n      console.log(_this.state);\n      var url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212';\n      superagent.get(url).query(null).set('Accept', 'text/json').end(function (error, response) {\n        var venues = response.body.response.venues;\n\n        _this.setState({\n          venues: venues\n        });\n      });\n    };\n\n    _this.centerMoved = function (mapProps, map, cord) {\n      console.log(\"mapMOVED\", mapProps);\n      console.log(\"map\", map.getCenter().lat());\n      console.log(\"cord\", cord);\n\n      _this.setState({\n        centerLat: map.getCenter().lat(),\n        centerLng: map.getCenter().lng()\n      });\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.markers = function () {\n      console.log(\"STATE\", _this.state.venues); //\n\n      return _this.state.venues.map(function (venue) {\n        return React.createElement(Marker, {\n          key: venue.id,\n          onClick: _this.centerMoved,\n          title: venue.name,\n          name: venue.name,\n          position: {\n            lat: venue.location.lat,\n            lng: venue.location.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n      }); // return <Marker\n      //   key={this.state.venues[0].id}\n      //   onClick={this.onMarkerClick}\n      //   title={this.state.venues[0].name}\n      //   name={this.state.venues[0].name}\n      //   position={{lat: 40.75768883549578, lng: -73.98883631344103}}\n      //   />\n      // return this.state.venues.map(venue => <Marker\n      //   key={venue.id}\n      //   onClick={this.onMarkerClick}\n      //   title={venue.name}\n      //   name={venue.name}\n      //   position={{lat: venue.location.lat, lng: venue.location.lng}}\n      //   />)\n    };\n\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//\n      // const url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212'\n      //\n      // superagent\n      // .get(url)\n      // .query(null)\n      // .set('Accept','text/json')\n      // .end((error, response) => {\n      //\n      //   const venues = response.body.response.venues\n      //   this.setState({venues})\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.google);\n      var style = {\n        width: '100%',\n        height: '100%' // let venueMarkers = this.state.venues.map(venue => <Marker\n        // key={venue.id}\n        // onClick={this.onMarkerClick}\n        // title={venue.name}\n        // name={venue.name}\n        // position={{lat: venue.lat, lng: venue.lng}} />)\n\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        className: \"location-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.props.currentLocation && this.state.centerLat ? this.getSomeLocation() : '', React.createElement(Grid, {\n        columns: 2,\n        padded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"places\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Places, {\n        venues: this.state.venues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"maps map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        initialCenter: this.props.center,\n        zoom: 13,\n        onDragend: this.centerMoved,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), this.state.venues ? this.markers() : null, React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.state.selectedPlace.name))))))));\n    }\n  }]);\n\n  return Location;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: peanuts.GOOGLE_API_KEY\n})(Location); //\n// <CurrentLocation\n//     centerAroundCurrentLocation\n//     google={this.props.google}\n//     onClick={(e)=> console.log(e) }\n//     >\n//     {console.log(\"inside currentLocation\",this.google)}\n//\n// </CurrentLocation>\n// <GoogleMapLoader\n//   containerElement = {mapContainer}\n//   googleMapElement = {\n//     <GoogleMap\n//         defaultZoom={15}\n//         defaultCenter={this.props.location}\n//         options={{streetViewControl:true, mapTypeControl:false}}>\n//         </GoogleMap>\n//       }/>","map":{"version":3,"sources":["/Users/travis/Documents/development/project_bball/project_bball/b-ball-frontend/src/Containers/Locations.jsx"],"names":["React","Component","Places","CurrentLocation","superagent","Map","InfoWindow","Marker","GoogleApiWrapper","Grid","peanuts","Location","state","showingInfoWindow","activeMarker","selectedPlace","venues","markerObjects","centerLat","props","center","lat","centerLng","lng","getSomeLocation","console","log","url","get","query","set","end","error","response","body","setState","centerMoved","mapProps","map","cord","getCenter","onMarkerClick","marker","e","onClose","markers","venue","id","name","location","google","style","width","height","currentLocation","apiKey","GOOGLE_API_KEY"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Places from '../Components/Places'\nimport CurrentLocation from '../Components/CurrentLocation'\nimport superagent from 'superagent'\nimport {Map,InfoWindow,Marker,GoogleApiWrapper} from 'google-maps-react'\nimport { Grid } from 'semantic-ui-react'\nimport {peanuts} from \"../config.js\"\n\n\n  export class Location extends Component {\n\n    state = {\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},         //Shows the infoWindow to the selected place upon a marker\n      venues: [],\n      markerObjects: [],\n      centerLat: this.props.center.lat,\n      centerLng: this.props.center.lng\n\n    };\n\n    componentDidMount(){\n      //\n      // const url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212'\n      //\n      // superagent\n      // .get(url)\n      // .query(null)\n      // .set('Accept','text/json')\n      // .end((error, response) => {\n      //\n      //   const venues = response.body.response.venues\n      //   this.setState({venues})\n      // })\n    }\n    getSomeLocation=()=>{\n        console.log(this.state);\n            const url = 'https://api.foursquare.com/v2/venues/search?&ll=40.7575285,-73.9884469&client_id=IULHTNQOQMGV0YJS1I0R35HEIDUZUL51HK4P4AYMBX3R1ORV&client_secret=M3Q44WIHHYS3MCJAHHXDLGHDLFILHPZENP2LE5R5MS2YTWKD&v=20181212'\n\n            superagent\n            .get(url)\n            .query(null)\n            .set('Accept','text/json')\n            .end((error, response) => {\n\n              const venues = response.body.response.venues\n              this.setState({venues})\n            })\n    }\n\n    centerMoved=(mapProps,map,cord)=>{\n      console.log(\"mapMOVED\",mapProps)\n      console.log(\"map\",map.getCenter().lat())\n      console.log(\"cord\", cord);\n\n      this.setState({\n          centerLat: map.getCenter().lat(),\n          centerLng: map.getCenter().lng()\n      })\n    }\n\n    onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      })\n    }\n\n    onClose = props => {\n      if(this.state.showingInfoWindow) {\n        this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n\n    }\n\n    // getVenues=()=>{\n    //   // let venueMarkers = this.state.venues.map(venue => <Marker\n    //   // key={venue.id}\n    //   // onClick={this.onMarkerClick}\n    //   // title={venue.name}\n    //   // name={venue.name}\n    //   // position={{lat: venue.lat, lng: venue.lng}} />)\n    //\n    //    let venueMarkers = this.state.venues.map(eachVenue =>{\n    //     return <Marker\n    //     key={eachVenue.id}\n    //      onClick={this.onMarkerClick}\n    //     title={eachVenue.name}\n    //     name={eachVenue.name}\n    //     position={{lat: eachVenue.location.lat, lng: eachVenue.location.lng}} />\n    //   })\n    //   console.log(venueMarkers[0]);\n    //   return venueMarkers\n    // }\n    markers = () => {\n      console.log(\"STATE\", this.state.venues)\n      //\n      return this.state.venues.map(venue => {\n        return <Marker\n            key={venue.id}\n            onClick={this.centerMoved}\n            title={venue.name}\n            name={venue.name}\n            position={{lat: venue.location.lat, lng: venue.location.lng}}\n            />\n      })\n\n      // return <Marker\n      //   key={this.state.venues[0].id}\n      //   onClick={this.onMarkerClick}\n      //   title={this.state.venues[0].name}\n      //   name={this.state.venues[0].name}\n      //   position={{lat: 40.75768883549578, lng: -73.98883631344103}}\n      //   />\n\n      // return this.state.venues.map(venue => <Marker\n      //   key={venue.id}\n      //   onClick={this.onMarkerClick}\n      //   title={venue.name}\n      //   name={venue.name}\n      //   position={{lat: venue.location.lat, lng: venue.location.lng}}\n      //   />)\n\n\n    }\n\n  render() {\n    console.log(this.props.google)\n    const style ={\n      width: '100%',\n      height: '100%'\n    }\n\n\n\n\n    // let venueMarkers = this.state.venues.map(venue => <Marker\n    // key={venue.id}\n    // onClick={this.onMarkerClick}\n    // title={venue.name}\n    // name={venue.name}\n    // position={{lat: venue.lat, lng: venue.lng}} />)\n\n    return (\n\n      <div style={style} className=\"location-page\">\n      {this.props.currentLocation && this.state.centerLat ? this.getSomeLocation() : ''}\n      <Grid columns={2} padded>\n        <Grid.Column>\n          <div className=\"places\">\n            <Places venues={this.state.venues}/>\n          </div>\n        </Grid.Column>\n        <Grid.Column google={this.props.google}>\n        <div className=\"maps map\">\n          <Map\n            google={this.props.google}\n            initialCenter={this.props.center}\n            zoom={13}\n            onDragend={this.centerMoved}\n          >\n          <Marker\n          onClick={this.onMarkerClick}\n          name={'current location'} />\n\n\n          {this.state.venues ? this.markers() : null}\n\n          <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n          >\n          <div>\n          <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n          </InfoWindow>\n          </Map>\n        </div>\n\n        </Grid.Column>\n      </Grid>\n\n\n\n\n\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: (peanuts.GOOGLE_API_KEY)\n})(Location)\n\n//\n// <CurrentLocation\n//     centerAroundCurrentLocation\n//     google={this.props.google}\n//     onClick={(e)=> console.log(e) }\n//     >\n//     {console.log(\"inside currentLocation\",this.google)}\n//\n// </CurrentLocation>\n\n\n\n\n\n\n// <GoogleMapLoader\n//   containerElement = {mapContainer}\n//   googleMapElement = {\n//     <GoogleMap\n//         defaultZoom={15}\n//         defaultCenter={this.props.location}\n//         options={{streetViewControl:true, mapTypeControl:false}}>\n//         </GoogleMap>\n//       }/>\n"]},"metadata":{},"sourceType":"module"}